// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/proto/v1/predictor.proto

package v1

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	regexp "regexp"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _regex_PersonProfile_Birthday = regexp.MustCompile(`^[0-9]{4,4}-[0-9]{2,2}-[0-9]{2,2}$`)

func (this *PersonProfile) Validate() error {
	if !_regex_PersonProfile_Birthday.MatchString(this.Birthday) {
		return github_com_mwitkow_go_proto_validators.FieldError("Birthday", fmt.Errorf(`value '%v' must be a string conforming to regex "^[0-9]{4,4}-[0-9]{2,2}-[0-9]{2,2}$"`, this.Birthday))
	}
	return nil
}
func (this *Person) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	// Validation of proto3 map<> fields is unsupported.
	for _, item := range this.PersonalCards {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("PersonalCards", err)
			}
		}
	}
	return nil
}
func (this *Meaning) Validate() error {
	return nil
}
func (this *Card) Validate() error {
	if this.Meaning != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Meaning); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Meaning", err)
		}
	}
	return nil
}
func (this *Planet) Validate() error {
	return nil
}
func (this *PlanetCycleDate) Validate() error {
	return nil
}
func (this *PlanetCycle) Validate() error {
	if this.Card != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Card); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Card", err)
		}
	}
	if this.Planet != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Planet); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Planet", err)
		}
	}
	if this.Start != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Start); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Start", err)
		}
	}
	if this.End != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.End); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("End", err)
		}
	}
	return nil
}
func (this *CardResponse) Validate() error {
	if this.Card != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Card); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Card", err)
		}
	}
	return nil
}

var _regex_PersonRequest_Api = regexp.MustCompile(`^v[0-9]+$`)
var _regex_PersonRequest_Lang = regexp.MustCompile(`^[a-z]{2,2}-[A-Z]{2,2}$`)
var _regex_PersonRequest_Year = regexp.MustCompile(`^[0-9]{4,4}$`)

func (this *PersonRequest) Validate() error {
	if !_regex_PersonRequest_Api.MatchString(this.Api) {
		return github_com_mwitkow_go_proto_validators.FieldError("Api", fmt.Errorf(`value '%v' must be a string conforming to regex "^v[0-9]+$"`, this.Api))
	}
	if !_regex_PersonRequest_Lang.MatchString(this.Lang) {
		return github_com_mwitkow_go_proto_validators.FieldError("Lang", fmt.Errorf(`value '%v' must be a string conforming to regex "^[a-z]{2,2}-[A-Z]{2,2}$"`, this.Lang))
	}
	if nil == this.PersonProfile {
		return github_com_mwitkow_go_proto_validators.FieldError("PersonProfile", fmt.Errorf("message must exist"))
	}
	if this.PersonProfile != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.PersonProfile); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("PersonProfile", err)
		}
	}
	return nil
}
func (this *PersonResponse) Validate() error {
	if this.Person != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Person); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Person", err)
		}
	}
	return nil
}
